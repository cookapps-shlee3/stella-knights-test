# name: Deploy Prod USA

# on:
#   workflow_dispatch: # 수동 배포
#   push:
#     tags:
#       - 'asdf/**'




# jobs:
#   build:
#     name: Build
#     runs-on: ubuntu-latest # 실행 될 OS. Github Action에서 제공하는 우분투 최신버전

#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3 # Repository 체크아웃

#       - name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.DEPLOY_AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.DEPLOY_AWS_SECRET_ACCESS_KEY }}
#           aws-region: us-west-2

#       - name: Login to Amazon ECR
#         id: login-ecr
#         uses: aws-actions/amazon-ecr-login@v1

#       - name: Build, tag, and push image to Amazon ECR
#         id: build-image
#         env:
#           ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#           ECR_REPOSITORY: unknown-knight # ECR리파지토리 이름
#           IMAGE_TAG: ${{ github.sha }}
#         run: |
#           # Build a docker container and
#           # push it to ECR so that it can
#           # be deployed to ECS.
#           docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f ./Dockerfile.prod .
#           docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
#           echo "$IMAGE_TAG" > image-value.txt
#           echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

#       - name: Upload Container Image Name
#         uses: actions/upload-artifact@v1
#         with:
#           name: image-value
#           path: image-value.txt

#       # - name: Cache Image Value
#       #   id: image-name-save
#       #   uses: actions/cache@v3
#       #   with:
#       #     path: image-value
#       #     key: ${{ steps.build-image.outputs.image }}


#   deploy_1:
#     name: Deploy USA
#     needs: build
#     runs-on: ubuntu-latest # 실행 될 OS. Github Action에서 제공하는 우분투 최신버전
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3 # Repository 체크아웃

#       - name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.DEPLOY_AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.DEPLOY_AWS_SECRET_ACCESS_KEY }}
#           aws-region: us-west-2

#       - name: Login to Amazon ECR
#         id: login-ecr
#         uses: aws-actions/amazon-ecr-login@v1

#       - name: Environment variables substitution
#         run: |
#           npx envsub .aws/task-definitions/production_usa.json task-definition.json
#         env: # 환경변수들
#           PRODUCTION: prod
#           DB_USERNAME_PROD: ${{ secrets.DB_USERNAME_PROD }}
#           DB_PASSWORD_PROD: ${{ secrets.DB_PASSWORD_PROD }}
#           DB_HOST_PROD: ${{ secrets.DB_HOST_USA_PROD }}
#           DB_PORT_PROD: ${{ secrets.DB_PORT_PROD }}
#           DB_DATABASE_PROD: ${{ secrets.DB_DATABASE_PROD }}
#           REDIS_HOST_PROD: ${{ secrets.REDIS_HOST_USA_PROD }}
#           REDIS_PORT_PROD: ${{ secrets.REDIS_PORT_PROD }}
#           MONGO_URL_PROD: ${{ secrets.MONGO_URL_PROD }}
#           MONGO_DATABASE_PROD: ${{ secrets.MONGO_DATABASE_PROD }}
#           MONGO_COLLECTION_PROD: ${{ secrets.MONGO_COLLECTION_PROD }}
#           RABBITMQ_ENABLE_PROD: ${{ secrets.RABBITMQ_ENABLE_USA_PROD }}
#           RABBITMQ_PROD: ${{ secrets.RABBITMQ_USA_PROD }}
#           LOCATION_CODE : USA

#       - name: Download Container Image Name
#         uses : actions/download-artifact@v1
#         with:
#           name: image-value

#       - shell: bash
#         id: read-image
#         env:
#           ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#           ECR_REPOSITORY: unknown-knight # ECR리파지토리 이름
#         run: |
#           value=`cat image-value/image-value.txt`
#           echo The result is $value
#           echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$value"

#       - name: Fill in the new image ID in the Amazon ECS task definition
#         id: task-def
#         uses: aws-actions/amazon-ecs-render-task-definition@v1
#         with:
#           task-definition: task-definition.json
#           container-name: unknown-knight # 컨테이너 이름
#           image: ${{ steps.read-image.outputs.image }} # line 40에서 넘겨받은 value

#       - name: Deploy Amazon ECS task definition
#         uses: aws-actions/amazon-ecs-deploy-task-definition@v1
#         with:
#           task-definition: ${{ steps.task-def.outputs.task-definition }}
#           service: unknown-knight-usa-prod # 서비스 이름
#           cluster: bm-unknown-knight-usa # 클러스터 이름
#           # wait-for-service-stability: true # 

#   deploy_2:
#     name: Deploy KOR
#     needs: build
#     runs-on: ubuntu-latest # 실행 될 OS. Github Action에서 제공하는 우분투 최신버전
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3 # Repository 체크아웃

#       - name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.DEPLOY_AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.DEPLOY_AWS_SECRET_ACCESS_KEY }}
#           aws-region: us-west-2

#       - name: Login to Amazon ECR
#         id: login-ecr
#         uses: aws-actions/amazon-ecr-login@v1

#       - name: Environment variables substitution
#         run: |
#           npx envsub .aws/task-definitions/production_kor.json task-definition.json
#         env: # 환경변수들
#           PRODUCTION: prod
#           DB_USERNAME_PROD: ${{ secrets.DB_USERNAME_PROD }}
#           DB_PASSWORD_PROD: ${{ secrets.DB_PASSWORD_PROD }}
#           DB_HOST_PROD: ${{ secrets.DB_HOST_KOR_PROD }}
#           DB_PORT_PROD: ${{ secrets.DB_PORT_PROD }}
#           DB_DATABASE_PROD: ${{ secrets.DB_DATABASE_PROD }}
#           REDIS_HOST_PROD: ${{ secrets.REDIS_HOST_KOR_PROD }}
#           REDIS_PORT_PROD: ${{ secrets.REDIS_PORT_PROD }}
#           MONGO_URL_PROD: ${{ secrets.MONGO_URL_PROD }}
#           MONGO_DATABASE_PROD: ${{ secrets.MONGO_DATABASE_PROD }}
#           MONGO_COLLECTION_PROD: ${{ secrets.MONGO_COLLECTION_PROD }}
#           RABBITMQ_ENABLE_PROD: ${{ secrets.RABBITMQ_ENABLE_KOR_PROD }}
#           RABBITMQ_PROD: ${{ secrets.RABBITMQ_KOR_PROD }}
#           LOCATION_CODE : KOR

#       - name: Download Container Image Name
#         uses : actions/download-artifact@v1
#         with:
#           name: image-value

#       - shell: bash
#         id: read-image
#         env:
#           ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#           ECR_REPOSITORY: unknown-knight # ECR리파지토리 이름
#         run: |
#           value=`cat image-value/image-value.txt`
#           echo The result is $value
#           echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$value"

#       - name: Fill in the new image ID in the Amazon ECS task definition
#         id: task-def
#         uses: aws-actions/amazon-ecs-render-task-definition@v1
#         with:
#           task-definition: task-definition.json
#           container-name: unknown-knight # 컨테이너 이름
#           image: ${{ steps.read-image.outputs.image }} # line 40에서 넘겨받은 value

#       - name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.DEPLOY_AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.DEPLOY_AWS_SECRET_ACCESS_KEY }}
#           aws-region: ap-northeast-2

#       - name: Deploy Amazon ECS task definition
#         uses: aws-actions/amazon-ecs-deploy-task-definition@v1
#         with:
#           task-definition: ${{ steps.task-def.outputs.task-definition }}
#           service: unknown-knight-kor-prod # 서비스 이름
#           cluster: bm-unknown-knight-kor # 클러스터 이름
#           # wait-for-service-stability: true # 

#   deploy_3:
#     name: Deploy VNM
#     needs: build
#     runs-on: ubuntu-latest # 실행 될 OS. Github Action에서 제공하는 우분투 최신버전
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3 # Repository 체크아웃

#       - name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.DEPLOY_AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.DEPLOY_AWS_SECRET_ACCESS_KEY }}
#           aws-region: us-west-2

#       - name: Login to Amazon ECR
#         id: login-ecr
#         uses: aws-actions/amazon-ecr-login@v1

#       - name: Environment variables substitution
#         run: |
#           npx envsub .aws/task-definitions/production_vnm.json task-definition.json
#         env: # 환경변수들
#           PRODUCTION: prod
#           DB_USERNAME_PROD: ${{ secrets.DB_USERNAME_PROD }}
#           DB_PASSWORD_PROD: ${{ secrets.DB_PASSWORD_PROD }}
#           DB_HOST_PROD: ${{ secrets.DB_HOST_VNM_PROD }}
#           DB_PORT_PROD: ${{ secrets.DB_PORT_PROD }}
#           DB_DATABASE_PROD: ${{ secrets.DB_DATABASE_PROD }}
#           REDIS_HOST_PROD: ${{ secrets.REDIS_HOST_VNM_PROD }}
#           REDIS_PORT_PROD: ${{ secrets.REDIS_PORT_PROD }}
#           MONGO_URL_PROD: ${{ secrets.MONGO_URL_PROD }}
#           MONGO_DATABASE_PROD: ${{ secrets.MONGO_DATABASE_PROD }}
#           MONGO_COLLECTION_PROD: ${{ secrets.MONGO_COLLECTION_PROD }}
#           RABBITMQ_ENABLE_PROD: ${{ secrets.RABBITMQ_ENABLE_VNM_PROD }}
#           RABBITMQ_PROD: ${{ secrets.RABBITMQ_VNM_PROD }}
          
#           LOCATION_CODE : VNM

#       - name: Download Container Image Name
#         uses : actions/download-artifact@v1
#         with:
#           name: image-value

#       - shell: bash
#         id: read-image
#         env:
#           ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#           ECR_REPOSITORY: unknown-knight # ECR리파지토리 이름
#         run: |
#           value=`cat image-value/image-value.txt`
#           echo The result is $value
#           echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$value"

#       - name: Fill in the new image ID in the Amazon ECS task definition
#         id: task-def
#         uses: aws-actions/amazon-ecs-render-task-definition@v1
#         with:
#           task-definition: task-definition.json
#           container-name: unknown-knight # 컨테이너 이름
#           image: ${{ steps.read-image.outputs.image }} # line 40에서 넘겨받은 value

#       - name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.DEPLOY_AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.DEPLOY_AWS_SECRET_ACCESS_KEY }}
#           aws-region: ap-northeast-2

#       - name: Deploy Amazon ECS task definition
#         uses: aws-actions/amazon-ecs-deploy-task-definition@v1
#         with:
#           task-definition: ${{ steps.task-def.outputs.task-definition }}
#           service: unknown-knight-vnm-prod # 서비스 이름
#           cluster: bm-unknown-knight-vnm # 클러스터 이름
#           # wait-for-service-stability: true # 

#   deploy_4:
#     name: Deploy GBR
#     needs: build
#     runs-on: ubuntu-latest # 실행 될 OS. Github Action에서 제공하는 우분투 최신버전
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3 # Repository 체크아웃

#       - name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.DEPLOY_AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.DEPLOY_AWS_SECRET_ACCESS_KEY }}
#           aws-region: us-west-2

#       - name: Login to Amazon ECR
#         id: login-ecr
#         uses: aws-actions/amazon-ecr-login@v1

#       - name: Environment variables substitution
#         run: |
#           npx envsub .aws/task-definitions/production_gbr.json task-definition.json
#         env: # 환경변수들
#           PRODUCTION: prod
#           DB_USERNAME_PROD: ${{ secrets.DB_USERNAME_PROD }}
#           DB_PASSWORD_PROD: ${{ secrets.DB_PASSWORD_PROD }}
#           DB_HOST_PROD: ${{ secrets.DB_HOST_GBR_PROD }}
#           DB_PORT_PROD: ${{ secrets.DB_PORT_PROD }}
#           DB_DATABASE_PROD: ${{ secrets.DB_DATABASE_PROD }}
#           REDIS_HOST_PROD: ${{ secrets.REDIS_HOST_GBR_PROD }}
#           REDIS_PORT_PROD: ${{ secrets.REDIS_PORT_PROD }}
#           MONGO_URL_PROD: ${{ secrets.MONGO_URL_PROD }}
#           MONGO_DATABASE_PROD: ${{ secrets.MONGO_DATABASE_PROD }}
#           MONGO_COLLECTION_PROD: ${{ secrets.MONGO_COLLECTION_PROD }}
#           RABBITMQ_ENABLE_PROD: ${{ secrets.RABBITMQ_ENABLE_GBR_PROD }}
#           RABBITMQ_PROD: ${{ secrets.RABBITMQ_GBR_PROD }}
#           LOCATION_CODE : GBR

#       - name: Download Container Image Name
#         uses : actions/download-artifact@v1
#         with:
#           name: image-value

#       - shell: bash
#         id: read-image
#         env:
#           ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#           ECR_REPOSITORY: unknown-knight # ECR리파지토리 이름
#         run: |
#           value=`cat image-value/image-value.txt`
#           echo The result is $value
#           echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$value"

#       - name: Fill in the new image ID in the Amazon ECS task definition
#         id: task-def
#         uses: aws-actions/amazon-ecs-render-task-definition@v1
#         with:
#           task-definition: task-definition.json
#           container-name: unknown-knight # 컨테이너 이름
#           image: ${{ steps.read-image.outputs.image }} # line 40에서 넘겨받은 value

#       - name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.DEPLOY_AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.DEPLOY_AWS_SECRET_ACCESS_KEY }}
#           aws-region: eu-west-2

#       - name: Deploy Amazon ECS task definition
#         uses: aws-actions/amazon-ecs-deploy-task-definition@v1
#         with:
#           task-definition: ${{ steps.task-def.outputs.task-definition }}
#           service: unknown-knight-gbr-prod # 서비스 이름
#           cluster: bm-unknown-knight-gbr # 클러스터 이름
#           # wait-for-service-stability: true # 
        